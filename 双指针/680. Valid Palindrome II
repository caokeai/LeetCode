/*
题目：
Given a non-empty string s, you may delete at most one character. Judge whether you can make it a palindrome.
Example 1:
Input: "aba"
Output: True
Example 2:
Input: "abca"
Output: True
Explanation: You could delete the character 'c'.
Note:
The string will only contain lowercase characters a-z. The maximum length of the string is 50000.
*/
/*
class Solution {
public:
    bool validPalindrome(string s) {
        int size=s.size();
        if(size==0||size==1)
            return true;
        int start=0,end=size-1;
        int count=0;
        while(start<end)
        {
            if(s[start]!=s[end])
            {
                if(s[start]==s[end-1])
                    end=end-1;
                else if(s[start+1]==s[end])
                    start=start+1;
                else
                    return false;
                count++;
            }
            start++;
            end--;
        }
        if(count<=1)
            return true;
        else
            return false;
    }
};
这是错误解答，解答错在无法判断如何修改，
例如"ebcbbececabbacecbbcbe" 当检索到"ececabbacec"时，两个条件均满足，但是只有一种方法有效，除非遍历剩余的全部不能判断
*/
