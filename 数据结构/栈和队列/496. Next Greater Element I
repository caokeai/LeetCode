/*
题目：
You are given two arrays (without duplicates) nums1 and nums2 where nums1’s elements are subset of nums2. 
Find all the next greater numbers for nums1's elements in the corresponding places of nums2.
The Next Greater Number of a number x in nums1 is the first greater number to its right in nums2. 
If it does not exist, output -1 for this number.
Example 1:
Input: nums1 = [4,1,2], nums2 = [1,3,4,2].
Output: [-1,3,-1]
Explanation:
    For number 4 in the first array, you cannot find the next greater number for it in the second array, so output -1.
    For number 1 in the first array, the next greater number for it in the second array is 3.
    For number 2 in the first array, there is no next greater number for it in the second array, so output -1.
Example 2:
Input: nums1 = [2,4], nums2 = [1,2,3,4].
Output: [3,-1]
Explanation:
    For number 2 in the first array, the next greater number for it in the second array is 3.
    For number 4 in the first array, there is no next greater number for it in the second array, so output -1.
Note:
All elements in nums1 and nums2 are unique.
The length of both nums1 and nums2 would not exceed 1000.
解析：
同寻找其后出现的第一个大于其的元素。只是在找到后，在结果中按照nums1的顺序，选出子集。
如nums2的其后第一个大元素的集合为temp,那么按照nums1中元素的值寻找其在nums2中的索引，
并对应寻找其后第一出现的大元素。注意这里temp中应为nums2的数值，而不是索引。
更优的方法应是使用哈希表。待之后更新。
*/
class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        int size=nums2.size();
        vector<int> temp=nums2;//vector必须初始化才可以使用索引访问。
        for(int i=0;i<size;i++)
            temp[i]=-1;//全部设置初值为-1，满足修改，不满足即是-1
        stack<int> st;
        for(int i=0;i<size;i++)
        {
            while(!st.empty())
            {
                if(nums2[i]>nums2[st.top()])
                {
                    temp[st.top()]=nums2[i];
                    st.pop();
                }
                else
                    break;
            }
            st.push(i);
        }//temp中为每个nums2中元素，其后第一个大于其的元素数值。
        vector<int> res;//从temp中按照nums1顺序选取子集。
        for(int i=0;i<nums1.size();i++)
            for(int j=0;j<size;j++)
            {
                if(nums1[i]==nums2[j])
                {
                    res.push_back(temp[j]);
                    break;
                 }
            }
        return res;
    }
};
